/* tslint:disable */
/* eslint-disable */
/**
 * nano-rpc-api
 * API specification for the [Nano Node RPC API](https://docs.nano.org/commands/rpc-protocol) 
 *
 * The version of the OpenAPI document: 19.0.0-alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BlockDataJson,
    BlockDataJsonFromJSON,
    BlockDataJsonFromJSONTyped,
    BlockDataJsonToJSON,
    ModelBoolean,
    ModelBooleanFromJSON,
    ModelBooleanFromJSONTyped,
    ModelBooleanToJSON,
    SubType,
    SubTypeFromJSON,
    SubTypeFromJSONTyped,
    SubTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface BlockInfoResponse
 */
export interface BlockInfoResponse {
    /**
     * 
     * @type {string}
     * @memberof BlockInfoResponse
     */
    blockAccount?: string;
    /**
     * 1 raw is the smallest possible division and NANO/Nano (Mnano) is the current standard division used in most wallets, on exchanges, etc.
     * @type {number}
     * @memberof BlockInfoResponse
     */
    amount?: number;
    /**
     * 1 raw is the smallest possible division and NANO/Nano (Mnano) is the current standard division used in most wallets, on exchanges, etc.
     * @type {number}
     * @memberof BlockInfoResponse
     */
    balance?: number;
    /**
     * 
     * @type {string}
     * @memberof BlockInfoResponse
     */
    height?: string;
    /**
     * 
     * @type {string}
     * @memberof BlockInfoResponse
     */
    localTimestamp?: string;
    /**
     * 
     * @type {ModelBoolean}
     * @memberof BlockInfoResponse
     */
    confirmed?: ModelBoolean;
    /**
     * 
     * @type {BlockDataJson}
     * @memberof BlockInfoResponse
     */
    contents?: BlockDataJson;
    /**
     * 
     * @type {SubType}
     * @memberof BlockInfoResponse
     */
    subType?: SubType;
}

export function BlockInfoResponseFromJSON(json: any): BlockInfoResponse {
    return BlockInfoResponseFromJSONTyped(json, false);
}

export function BlockInfoResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockInfoResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'blockAccount': !exists(json, 'block_account') ? undefined : json['block_account'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'balance': !exists(json, 'balance') ? undefined : json['balance'],
        'height': !exists(json, 'height') ? undefined : json['height'],
        'localTimestamp': !exists(json, 'local_timestamp') ? undefined : json['local_timestamp'],
        'confirmed': !exists(json, 'confirmed') ? undefined : ModelBooleanFromJSON(json['confirmed']),
        'contents': !exists(json, 'contents') ? undefined : BlockDataJsonFromJSON(json['contents']),
        'subType': !exists(json, 'subType') ? undefined : SubTypeFromJSON(json['subType']),
    };
}

export function BlockInfoResponseToJSON(value?: BlockInfoResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'block_account': value.blockAccount,
        'amount': value.amount,
        'balance': value.balance,
        'height': value.height,
        'local_timestamp': value.localTimestamp,
        'confirmed': ModelBooleanToJSON(value.confirmed),
        'contents': BlockDataJsonToJSON(value.contents),
        'subType': SubTypeToJSON(value.subType),
    };
}


