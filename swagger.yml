openapi: '3.0.0'
info:
  version: 19.0.1
  title: nano-rpc-api
servers: 
 - url: http://localhost:7076
paths:
  /#account_balance:
    post:
      tags:
        - Node RPCs
      operationId: account_balance
      summary: Returns how many RAW is owned and how many have not yet been received by account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountBalanceRequest'
      responses:
        '200':
          description: Returns balance and pending
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBalanceResponse'
  /#account_block_count:
    post:
      tags:
        - Node RPCs
      operationId: account_block_count
      summary: Get number of blocks for a specific account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountBlockCountRequest'
      responses:
        '200':
          description: The number of blocks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBlockCountResponse'
  /#account_get:
    post:
      tags:
        - Node RPCs
      operationId: account_get
      summary: Get account for the public key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountGetRequest'
      responses:
        '200':
          description: the account for a public key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountGetResponse'
  /#account_history:
    post:
      tags:
        - Node RPCs
      operationId: account_history
      summary: Gets account history
      description: |
        Reports send/receive information for an account.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountHistoryRequest'
      responses:
        '200':
          description: the account history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountHistoryResponse'
  /#account_info:
    post:
      tags:
        - Node RPCs
      operationId: account_info
      summary: Gets account information
      description: |
        Returns frontier, open block, change representative block, balance, last modified timestamp from local database &
        block count for **account**. Only works for accounts that have an entry on the ledger, will return _Account not
        found_ otherwise.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountInfoRequest'
      responses:
        '200':
          description: the account information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInfoResponse'  
                
  /#create:
    post:
      tags:
        - Wallet
      operationId: walletCreate
      summary: Creates a new random wallet id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WalletCreateRequest'
      responses:
        '200':
          description: The created wallet id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletCreateResponse'
  /#accounts_create:
    post:
      tags:
        - Wallet
      operationId: accounts_create
      summary: Creates new accounts, insert next deterministic keys in wallet up to count
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountsCreateRequest'
      responses:
        '200':
          description: a list of the created accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsCreateResponse'
  /#receive:
    post:
      tags:
        - Wallet
      operationId: receive
      summary: Receive pending block for account in wallet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReceiveRequest'
      responses:
        '200':
          description: the eventually received block
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceiveResponse'
components:
  schemas:
    AccountBalanceRequest:
      type: object
      required: 
        - action
        - account
      properties:
        action:
          type: string
          enum: 
            - "account_balance"
        account: 
          $ref: '#/components/schemas/NanoAddress'
    AccountBlockCountRequest:
      type: object
      required: 
        - action
        - account
      properties:
        action:
          type: string
          enum: 
            - "account_block_count"
        account: 
          $ref: '#/components/schemas/NanoAddress'
    AccountGetRequest:
      type: object
      required: 
        - action
        - key
      properties:
        action:
          type: string
          enum: 
            - "account_get"
        key: 
          $ref: '#/components/schemas/PublicKey'
    AccountHistoryRequest:
      type: object
      required: 
        - action
        - key
      properties:
        action:
          type: string
          enum: 
            - "account_history"
        account: 
          $ref: '#/components/schemas/NanoAddress'
        count:
          $ref: '#/components/schemas/BlockCount'
    AccountInfoRequest:
      type: object
      properties:
        action:
          type: string
          enum:
            - "account_info"
        account: 
          $ref: '#/components/schemas/NanoAddress'
    WalletCreateRequest:
      type: object
      properties:
        action:
          type: string
          enum:
            - "wallet_create"
    AccountsCreateRequest:
      type: object
      properties:
        action:
          type: string
          enum:
            - "accounts_create"
        wallet:
          $ref: '#/components/schemas/Wallet'
        count:
          $ref: '#/components/schemas/AccountCount'
    ReceiveRequest:
      type: object
      properties:
        action:
          type: string
          enum:
            - "receive"
        wallet:
          $ref: '#/components/schemas/Wallet'
        account: 
          $ref: '#/components/schemas/NanoAddress'
        block:
          $ref: '#/components/schemas/BlockHash'
    AccountBalanceResponse:
      type: object
      properties:
        balance:
          $ref: '#/components/schemas/Raw'
        pending: 
          $ref: '#/components/schemas/Raw'
    AccountBlockCountResponse:
      type: object
      properties:
        block_count:
          type: string
    AccountGetResponse:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/NanoAddress'
    AccountHistoryResponse:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/NanoAddress'
        history:
          type: array
          items:
            $ref: '#/components/schemas/Block'
        previous:
          $ref: '#/components/schemas/BlockHash'
    AccountInfoResponse:
      type: object
      properties:
        frontier:
          type: string
        open_block:
          $ref: '#/components/schemas/BlockHash'
        representative_block:
          $ref: '#/components/schemas/BlockHash'
        balance:
          $ref: '#/components/schemas/Raw'
        modified_timestamp:
          $ref: '#/components/schemas/LocalTimestamp'
        block_count:
          $ref: '#/components/schemas/BlockCount'
        confirmation_height:
          $ref: '#/components/schemas/ConfirmationHeight'
        account_version:
          $ref: '#/components/schemas/AccountVersion'
    WalletCreateResponse:
      type: object
      properties:
        wallet:
          $ref: '#/components/schemas/Wallet'
    AccountsCreateResponse:
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/NanoAddress'
    ReceiveResponse:
      type: object
      properties:
        block:
          $ref: '#/components/schemas/BlockHash'
    Wallet:
      type: string
      example: "000D1BAEC8EC208142C99059B393051BAC8380F9B5A2E6B2489A277D81789F3F"
    AccountCount:
      type: string
      example: "2"
    NanoAddress:
      type: string
      example: "nano_1hzoje373eapce4ses7xsx539suww5555hi9q8i8j7hpbayzxq4c4nn91hr8"
    PublicKey:
      type: string
      example: "3068BB1CA04525BB0E416C485FE6A67FD52540227D267CC8B6E8DA958A7FA039"
    Raw:
      type: number
      description: 1 raw is the smallest possible division and NANO/Nano (Mnano) is the current standard division used in most wallets, on exchanges, etc.
      example: "1000000000000000000000000000000"
    BlockCount:
      type: string
      example: "1"
    BlockHeight:
      type: string
      example: "60"
    BlockHash:
      type: string
      example: "8D3AB98B301224253750D448B4BD997132400CEDD0A8432F775724F2D9821C72"
    BlockState:
      type: string
      enum: 
        - "send"
    ConfirmationHeight:
      type: string
      example: "28"
    LocalTimestamp:
      type: string
      example: "1551532723"
    AccountVersion:
      type: string
      example: "1"
    Block:
      type: object
      properties:
        "type":
          $ref: '#/components/schemas/BlockState'
        account:
          $ref: '#/components/schemas/NanoAddress'
        amount:
          $ref: '#/components/schemas/Raw'
        local_timestamp:
          $ref: '#/components/schemas/LocalTimestamp'
        height:
          $ref: '#/components/schemas/BlockHeight'
        hash:
          $ref: '#/components/schemas/BlockHash'
