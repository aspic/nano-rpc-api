// tslint:disable
/**
 * nano-rpc-api
 * API specification for the [Nano Node RPC API](https://docs.nano.org/commands/rpc-protocol) 
 *
 * The version of the OpenAPI document: 19.0.0-alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AccountInfoResponse
 */
export interface AccountInfoResponse {
    /**
     * 
     * @type {string}
     * @memberof AccountInfoResponse
     */
    frontier?: string;
    /**
     * 
     * @type {string}
     * @memberof AccountInfoResponse
     */
    openBlock?: string;
    /**
     * 
     * @type {string}
     * @memberof AccountInfoResponse
     */
    representativeBlock?: string;
    /**
     * 1 raw is the smallest possible division and NANO/Nano (Mnano) is the current standard division used in most wallets, on exchanges, etc.
     * @type {number}
     * @memberof AccountInfoResponse
     */
    balance?: number;
    /**
     * 
     * @type {string}
     * @memberof AccountInfoResponse
     */
    modifiedTimestamp?: string;
    /**
     * 
     * @type {string}
     * @memberof AccountInfoResponse
     */
    blockCount?: string;
    /**
     * 
     * @type {string}
     * @memberof AccountInfoResponse
     */
    confirmationHeight?: string;
    /**
     * 
     * @type {string}
     * @memberof AccountInfoResponse
     */
    accountVersion?: string;
}

export function AccountInfoResponseFromJSON(json: any): AccountInfoResponse {
    return {
        'frontier': !exists(json, 'frontier') ? undefined : json['frontier'],
        'openBlock': !exists(json, 'open_block') ? undefined : json['open_block'],
        'representativeBlock': !exists(json, 'representative_block') ? undefined : json['representative_block'],
        'balance': !exists(json, 'balance') ? undefined : json['balance'],
        'modifiedTimestamp': !exists(json, 'modified_timestamp') ? undefined : json['modified_timestamp'],
        'blockCount': !exists(json, 'block_count') ? undefined : json['block_count'],
        'confirmationHeight': !exists(json, 'confirmation_height') ? undefined : json['confirmation_height'],
        'accountVersion': !exists(json, 'account_version') ? undefined : json['account_version'],
    };
}

export function AccountInfoResponseToJSON(value?: AccountInfoResponse): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'frontier': value.frontier,
        'open_block': value.openBlock,
        'representative_block': value.representativeBlock,
        'balance': value.balance,
        'modified_timestamp': value.modifiedTimestamp,
        'block_count': value.blockCount,
        'confirmation_height': value.confirmationHeight,
        'account_version': value.accountVersion,
    };
}


