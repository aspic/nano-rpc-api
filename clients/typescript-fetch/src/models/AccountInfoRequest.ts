/* tslint:disable */
/* eslint-disable */
/**
 * nano-rpc-api
 * API specification for the [Nano Node RPC API](https://docs.nano.org/commands/rpc-protocol) 
 *
 * The version of the OpenAPI document: 19.0.0-alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ModelBoolean,
    ModelBooleanFromJSON,
    ModelBooleanFromJSONTyped,
    ModelBooleanToJSON,
} from './';

/**
 * 
 * @export
 * @interface AccountInfoRequest
 */
export interface AccountInfoRequest {
    /**
     * 
     * @type {string}
     * @memberof AccountInfoRequest
     */
    action?: AccountInfoRequestActionEnum;
    /**
     * 
     * @type {string}
     * @memberof AccountInfoRequest
     */
    account?: string;
    /**
     * Boolean, false by default. Returns representative when set to true.
     * @type {ModelBoolean}
     * @memberof AccountInfoRequest
     */
    representative?: ModelBoolean;
    /**
     * Boolean, false by default. Returns weigth when set to true.
     * @type {ModelBoolean}
     * @memberof AccountInfoRequest
     */
    weight?: ModelBoolean;
    /**
     * Boolean, false by default. Returns pending when set to true.
     * @type {ModelBoolean}
     * @memberof AccountInfoRequest
     */
    pending?: ModelBoolean;
}

export function AccountInfoRequestFromJSON(json: any): AccountInfoRequest {
    return AccountInfoRequestFromJSONTyped(json, false);
}

export function AccountInfoRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountInfoRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'action': !exists(json, 'action') ? undefined : json['action'],
        'account': !exists(json, 'account') ? undefined : json['account'],
        'representative': !exists(json, 'representative') ? undefined : ModelBooleanFromJSON(json['representative']),
        'weight': !exists(json, 'weight') ? undefined : ModelBooleanFromJSON(json['weight']),
        'pending': !exists(json, 'pending') ? undefined : ModelBooleanFromJSON(json['pending']),
    };
}

export function AccountInfoRequestToJSON(value?: AccountInfoRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'action': value.action,
        'account': value.account,
        'representative': ModelBooleanToJSON(value.representative),
        'weight': ModelBooleanToJSON(value.weight),
        'pending': ModelBooleanToJSON(value.pending),
    };
}

/**
* @export
* @enum {string}
*/
export enum AccountInfoRequestActionEnum {
    AccountInfo = 'account_info'
}


