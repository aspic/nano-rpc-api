/* tslint:disable */
/* eslint-disable */
/**
 * nano-rpc-api
 * API specification for the [Nano Node RPC API](https://docs.nano.org/commands/rpc-protocol) 
 *
 * The version of the OpenAPI document: 19.0.0-alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BlockDataJson,
    BlockDataJsonFromJSON,
    BlockDataJsonFromJSONTyped,
    BlockDataJsonToJSON,
} from './';

/**
 * 
 * @export
 * @interface ConfirmationInfo
 */
export interface ConfirmationInfo {
    /**
     * 1 raw is the smallest possible division and NANO/Nano (Mnano) is the current standard division used in most wallets, on exchanges, etc.
     * @type {number}
     * @memberof ConfirmationInfo
     */
    tally?: number;
    /**
     * 
     * @type {BlockDataJson}
     * @memberof ConfirmationInfo
     */
    contents?: BlockDataJson;
}

export function ConfirmationInfoFromJSON(json: any): ConfirmationInfo {
    return ConfirmationInfoFromJSONTyped(json, false);
}

export function ConfirmationInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfirmationInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'tally': !exists(json, 'tally') ? undefined : json['tally'],
        'contents': !exists(json, 'contents') ? undefined : BlockDataJsonFromJSON(json['contents']),
    };
}

export function ConfirmationInfoToJSON(value?: ConfirmationInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'tally': value.tally,
        'contents': BlockDataJsonToJSON(value.contents),
    };
}


