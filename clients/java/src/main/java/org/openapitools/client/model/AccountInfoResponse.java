/*
 * nano-rpc-api
 * API specification for the [Nano Node RPC API](https://docs.nano.org/commands/rpc-protocol) 
 *
 * The version of the OpenAPI document: 19.0.0-alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * AccountInfoResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-07T20:00:02.801+01:00[Europe/Oslo]")
public class AccountInfoResponse {
  public static final String SERIALIZED_NAME_FRONTIER = "frontier";
  @SerializedName(SERIALIZED_NAME_FRONTIER)
  private String frontier;

  public static final String SERIALIZED_NAME_OPEN_BLOCK = "open_block";
  @SerializedName(SERIALIZED_NAME_OPEN_BLOCK)
  private String openBlock;

  public static final String SERIALIZED_NAME_REPRESENTATIVE_BLOCK = "representative_block";
  @SerializedName(SERIALIZED_NAME_REPRESENTATIVE_BLOCK)
  private String representativeBlock;

  public static final String SERIALIZED_NAME_BALANCE = "balance";
  @SerializedName(SERIALIZED_NAME_BALANCE)
  private BigDecimal balance;

  public static final String SERIALIZED_NAME_MODIFIED_TIMESTAMP = "modified_timestamp";
  @SerializedName(SERIALIZED_NAME_MODIFIED_TIMESTAMP)
  private String modifiedTimestamp;

  public static final String SERIALIZED_NAME_BLOCK_COUNT = "block_count";
  @SerializedName(SERIALIZED_NAME_BLOCK_COUNT)
  private String blockCount;

  public static final String SERIALIZED_NAME_CONFIRMATION_HEIGHT = "confirmation_height";
  @SerializedName(SERIALIZED_NAME_CONFIRMATION_HEIGHT)
  private String confirmationHeight;

  public static final String SERIALIZED_NAME_ACCOUNT_VERSION = "account_version";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_VERSION)
  private String accountVersion;

  public static final String SERIALIZED_NAME_REPRESENTATIVE = "representative";
  @SerializedName(SERIALIZED_NAME_REPRESENTATIVE)
  private String representative;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private BigDecimal weight;

  public static final String SERIALIZED_NAME_PENDING = "pending";
  @SerializedName(SERIALIZED_NAME_PENDING)
  private BigDecimal pending;


  public AccountInfoResponse frontier(String frontier) {
    
    this.frontier = frontier;
    return this;
  }

   /**
   * Get frontier
   * @return frontier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFrontier() {
    return frontier;
  }


  public void setFrontier(String frontier) {
    this.frontier = frontier;
  }


  public AccountInfoResponse openBlock(String openBlock) {
    
    this.openBlock = openBlock;
    return this;
  }

   /**
   * Get openBlock
   * @return openBlock
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8D3AB98B301224253750D448B4BD997132400CEDD0A8432F775724F2D9821C72", value = "")

  public String getOpenBlock() {
    return openBlock;
  }


  public void setOpenBlock(String openBlock) {
    this.openBlock = openBlock;
  }


  public AccountInfoResponse representativeBlock(String representativeBlock) {
    
    this.representativeBlock = representativeBlock;
    return this;
  }

   /**
   * Get representativeBlock
   * @return representativeBlock
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8D3AB98B301224253750D448B4BD997132400CEDD0A8432F775724F2D9821C72", value = "")

  public String getRepresentativeBlock() {
    return representativeBlock;
  }


  public void setRepresentativeBlock(String representativeBlock) {
    this.representativeBlock = representativeBlock;
  }


  public AccountInfoResponse balance(BigDecimal balance) {
    
    this.balance = balance;
    return this;
  }

   /**
   * 1 raw is the smallest possible division and NANO/Nano (Mnano) is the current standard division used in most wallets, on exchanges, etc.
   * @return balance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1000000000000000000000000000000", value = "1 raw is the smallest possible division and NANO/Nano (Mnano) is the current standard division used in most wallets, on exchanges, etc.")

  public BigDecimal getBalance() {
    return balance;
  }


  public void setBalance(BigDecimal balance) {
    this.balance = balance;
  }


  public AccountInfoResponse modifiedTimestamp(String modifiedTimestamp) {
    
    this.modifiedTimestamp = modifiedTimestamp;
    return this;
  }

   /**
   * Get modifiedTimestamp
   * @return modifiedTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1551532723", value = "")

  public String getModifiedTimestamp() {
    return modifiedTimestamp;
  }


  public void setModifiedTimestamp(String modifiedTimestamp) {
    this.modifiedTimestamp = modifiedTimestamp;
  }


  public AccountInfoResponse blockCount(String blockCount) {
    
    this.blockCount = blockCount;
    return this;
  }

   /**
   * Get blockCount
   * @return blockCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public String getBlockCount() {
    return blockCount;
  }


  public void setBlockCount(String blockCount) {
    this.blockCount = blockCount;
  }


  public AccountInfoResponse confirmationHeight(String confirmationHeight) {
    
    this.confirmationHeight = confirmationHeight;
    return this;
  }

   /**
   * Get confirmationHeight
   * @return confirmationHeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "28", value = "")

  public String getConfirmationHeight() {
    return confirmationHeight;
  }


  public void setConfirmationHeight(String confirmationHeight) {
    this.confirmationHeight = confirmationHeight;
  }


  public AccountInfoResponse accountVersion(String accountVersion) {
    
    this.accountVersion = accountVersion;
    return this;
  }

   /**
   * Get accountVersion
   * @return accountVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public String getAccountVersion() {
    return accountVersion;
  }


  public void setAccountVersion(String accountVersion) {
    this.accountVersion = accountVersion;
  }


  public AccountInfoResponse representative(String representative) {
    
    this.representative = representative;
    return this;
  }

   /**
   * Get representative
   * @return representative
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "nano_1hzoje373eapce4ses7xsx539suww5555hi9q8i8j7hpbayzxq4c4nn91hr8", value = "")

  public String getRepresentative() {
    return representative;
  }


  public void setRepresentative(String representative) {
    this.representative = representative;
  }


  public AccountInfoResponse weight(BigDecimal weight) {
    
    this.weight = weight;
    return this;
  }

   /**
   * 1 raw is the smallest possible division and NANO/Nano (Mnano) is the current standard division used in most wallets, on exchanges, etc.
   * @return weight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1000000000000000000000000000000", value = "1 raw is the smallest possible division and NANO/Nano (Mnano) is the current standard division used in most wallets, on exchanges, etc.")

  public BigDecimal getWeight() {
    return weight;
  }


  public void setWeight(BigDecimal weight) {
    this.weight = weight;
  }


  public AccountInfoResponse pending(BigDecimal pending) {
    
    this.pending = pending;
    return this;
  }

   /**
   * 1 raw is the smallest possible division and NANO/Nano (Mnano) is the current standard division used in most wallets, on exchanges, etc.
   * @return pending
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1000000000000000000000000000000", value = "1 raw is the smallest possible division and NANO/Nano (Mnano) is the current standard division used in most wallets, on exchanges, etc.")

  public BigDecimal getPending() {
    return pending;
  }


  public void setPending(BigDecimal pending) {
    this.pending = pending;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountInfoResponse accountInfoResponse = (AccountInfoResponse) o;
    return Objects.equals(this.frontier, accountInfoResponse.frontier) &&
        Objects.equals(this.openBlock, accountInfoResponse.openBlock) &&
        Objects.equals(this.representativeBlock, accountInfoResponse.representativeBlock) &&
        Objects.equals(this.balance, accountInfoResponse.balance) &&
        Objects.equals(this.modifiedTimestamp, accountInfoResponse.modifiedTimestamp) &&
        Objects.equals(this.blockCount, accountInfoResponse.blockCount) &&
        Objects.equals(this.confirmationHeight, accountInfoResponse.confirmationHeight) &&
        Objects.equals(this.accountVersion, accountInfoResponse.accountVersion) &&
        Objects.equals(this.representative, accountInfoResponse.representative) &&
        Objects.equals(this.weight, accountInfoResponse.weight) &&
        Objects.equals(this.pending, accountInfoResponse.pending);
  }

  @Override
  public int hashCode() {
    return Objects.hash(frontier, openBlock, representativeBlock, balance, modifiedTimestamp, blockCount, confirmationHeight, accountVersion, representative, weight, pending);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountInfoResponse {\n");
    sb.append("    frontier: ").append(toIndentedString(frontier)).append("\n");
    sb.append("    openBlock: ").append(toIndentedString(openBlock)).append("\n");
    sb.append("    representativeBlock: ").append(toIndentedString(representativeBlock)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    modifiedTimestamp: ").append(toIndentedString(modifiedTimestamp)).append("\n");
    sb.append("    blockCount: ").append(toIndentedString(blockCount)).append("\n");
    sb.append("    confirmationHeight: ").append(toIndentedString(confirmationHeight)).append("\n");
    sb.append("    accountVersion: ").append(toIndentedString(accountVersion)).append("\n");
    sb.append("    representative: ").append(toIndentedString(representative)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    pending: ").append(toIndentedString(pending)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

