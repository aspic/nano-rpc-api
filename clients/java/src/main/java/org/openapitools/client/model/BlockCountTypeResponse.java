/*
 * nano-rpc-api
 * API specification for the [Nano Node RPC API](https://docs.nano.org/commands/rpc-protocol) 
 *
 * The version of the OpenAPI document: 19.0.0-alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * BlockCountTypeResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-11-28T18:31:13.967+01:00[Europe/Oslo]")
public class BlockCountTypeResponse {
  public static final String SERIALIZED_NAME_SEND = "send";
  @SerializedName(SERIALIZED_NAME_SEND)
  private String send;

  public static final String SERIALIZED_NAME_RECEIVE = "receive";
  @SerializedName(SERIALIZED_NAME_RECEIVE)
  private String receive;

  public static final String SERIALIZED_NAME_OPEN = "open";
  @SerializedName(SERIALIZED_NAME_OPEN)
  private String open;

  public static final String SERIALIZED_NAME_CHANGE = "change";
  @SerializedName(SERIALIZED_NAME_CHANGE)
  private String change;

  public static final String SERIALIZED_NAME_STATE_V0 = "state_v0";
  @SerializedName(SERIALIZED_NAME_STATE_V0)
  private String stateV0;

  public static final String SERIALIZED_NAME_STATE_V1 = "state_v1";
  @SerializedName(SERIALIZED_NAME_STATE_V1)
  private String stateV1;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;


  public BlockCountTypeResponse send(String send) {
    
    this.send = send;
    return this;
  }

   /**
   * Get send
   * @return send
  **/
  @ApiModelProperty(example = "1", required = true, value = "")

  public String getSend() {
    return send;
  }


  public void setSend(String send) {
    this.send = send;
  }


  public BlockCountTypeResponse receive(String receive) {
    
    this.receive = receive;
    return this;
  }

   /**
   * Get receive
   * @return receive
  **/
  @ApiModelProperty(example = "1", required = true, value = "")

  public String getReceive() {
    return receive;
  }


  public void setReceive(String receive) {
    this.receive = receive;
  }


  public BlockCountTypeResponse open(String open) {
    
    this.open = open;
    return this;
  }

   /**
   * Get open
   * @return open
  **/
  @ApiModelProperty(example = "1", required = true, value = "")

  public String getOpen() {
    return open;
  }


  public void setOpen(String open) {
    this.open = open;
  }


  public BlockCountTypeResponse change(String change) {
    
    this.change = change;
    return this;
  }

   /**
   * Get change
   * @return change
  **/
  @ApiModelProperty(example = "1", required = true, value = "")

  public String getChange() {
    return change;
  }


  public void setChange(String change) {
    this.change = change;
  }


  public BlockCountTypeResponse stateV0(String stateV0) {
    
    this.stateV0 = stateV0;
    return this;
  }

   /**
   * Get stateV0
   * @return stateV0
  **/
  @ApiModelProperty(example = "1", required = true, value = "")

  public String getStateV0() {
    return stateV0;
  }


  public void setStateV0(String stateV0) {
    this.stateV0 = stateV0;
  }


  public BlockCountTypeResponse stateV1(String stateV1) {
    
    this.stateV1 = stateV1;
    return this;
  }

   /**
   * Get stateV1
   * @return stateV1
  **/
  @ApiModelProperty(example = "1", required = true, value = "")

  public String getStateV1() {
    return stateV1;
  }


  public void setStateV1(String stateV1) {
    this.stateV1 = stateV1;
  }


  public BlockCountTypeResponse state(String state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(example = "1", required = true, value = "")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    this.state = state;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BlockCountTypeResponse blockCountTypeResponse = (BlockCountTypeResponse) o;
    return Objects.equals(this.send, blockCountTypeResponse.send) &&
        Objects.equals(this.receive, blockCountTypeResponse.receive) &&
        Objects.equals(this.open, blockCountTypeResponse.open) &&
        Objects.equals(this.change, blockCountTypeResponse.change) &&
        Objects.equals(this.stateV0, blockCountTypeResponse.stateV0) &&
        Objects.equals(this.stateV1, blockCountTypeResponse.stateV1) &&
        Objects.equals(this.state, blockCountTypeResponse.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(send, receive, open, change, stateV0, stateV1, state);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BlockCountTypeResponse {\n");
    sb.append("    send: ").append(toIndentedString(send)).append("\n");
    sb.append("    receive: ").append(toIndentedString(receive)).append("\n");
    sb.append("    open: ").append(toIndentedString(open)).append("\n");
    sb.append("    change: ").append(toIndentedString(change)).append("\n");
    sb.append("    stateV0: ").append(toIndentedString(stateV0)).append("\n");
    sb.append("    stateV1: ").append(toIndentedString(stateV1)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

