// tslint:disable
/**
 * nano-rpc-api
 * API specification for the [Nano Node RPC API](https://docs.nano.org/commands/rpc-protocol) 
 *
 * The version of the OpenAPI document: 19.0.0-alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BlockDataJson,
    BlockDataJsonFromJSON,
    BlockDataJsonToJSON,
    ModelBoolean,
    ModelBooleanFromJSON,
    ModelBooleanToJSON,
} from './';

/**
 * 
 * @export
 * @interface ProcessRequest
 */
export interface ProcessRequest {
    /**
     * 
     * @type {string}
     * @memberof ProcessRequest
     */
    action?: ProcessRequestActionEnum;
    /**
     * If \"true\", \"block\" must contain a JSON subtree instead of a JSON string.
     * @type {ModelBoolean}
     * @memberof ProcessRequest
     */
    jsonBlock?: ModelBoolean;
    /**
     * 
     * @type {BlockDataJson}
     * @memberof ProcessRequest
     */
    block?: BlockDataJson;
}

export function ProcessRequestFromJSON(json: any): ProcessRequest {
    return {
        'action': !exists(json, 'action') ? undefined : json['action'],
        'jsonBlock': !exists(json, 'json_block') ? undefined : ModelBooleanFromJSON(json['json_block']),
        'block': !exists(json, 'block') ? undefined : BlockDataJsonFromJSON(json['block']),
    };
}

export function ProcessRequestToJSON(value?: ProcessRequest): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'action': value.action,
        'json_block': ModelBooleanToJSON(value.jsonBlock),
        'block': BlockDataJsonToJSON(value.block),
    };
}

/**
* @export
* @enum {string}
*/
export enum ProcessRequestActionEnum {
    Process = 'process'
}


